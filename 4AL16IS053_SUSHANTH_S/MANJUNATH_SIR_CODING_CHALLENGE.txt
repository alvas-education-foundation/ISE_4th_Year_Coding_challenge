1.


def reverse(n): 
	rev = 0
	while (n != 0): 
		rev = (rev * 10) + (n % 10) 
		n //= 10
	return rev 

# Function to find the sum of the odd 
# and even positioned digits in a number 
def getSum(n): 

	n = reverse(n) 
	sumOdd = 0
	sumEven = 0
	c = 1

	while (n != 0): 

		# If c is even number then it means 
		# digit extracted is at even place 
		if (c % 2 == 0): 
			sumEven += n % 10
		else: 
			sumOdd += n % 10
		n //= 10
		c += 1

	print("Sum odd =", sumOdd) 
	print("Sum even =", sumEven) 

# Driver code 
n = 457892
getSum(n)



2.


keyword = {"break", "case", "continue", "default", "defer", "else", "for", 
"func", "goto", "if", "map", "range", "return", "struct", "type", "var"}

input_var = input()
if input_var in keyword:
    print(input_var+ " is a keyword")
else:


3.


#include<stdio.h>
#define MAX 1000
void fibonacci(int n)
{
int i, t1 = 0, t2 = 1, nextTerm;
for (i = 1; i<=n; i++)
{
nextTerm = t1 + t2;
t1 = t2;
t2 = nextTerm;
}
printf("%d", t1);
}
void prime(int n)
{
int i, j, flag, count =0;
for (i=2; i<=MAX; i++)
{
flag = 0;
for (j=2; j<i; j++)
{
if(i%j == 0)
{
flag = 1;
break;
}
}
if (flag == 0)
if(++count == n)
{
printf("%d", i);
break;
}
}
}
int main()
{
int n;
scanf("%d", &n);
if(n%2 == 1)
fibonacci (n/2 + 1);
else
prime(n/2);
return 0;
}
    print(input_var+ " is a not keyword")