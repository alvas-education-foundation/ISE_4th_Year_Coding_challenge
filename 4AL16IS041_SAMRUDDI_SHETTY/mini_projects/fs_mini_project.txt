import java.awt.*;

import javax.swing.*;
import java.awt.event.*;
import java.io.*;
import java.util.*;

import javax.swing.border.EmptyBorder;

public class EyeData {
	JFrame mainF,addF,viewF,deleteF,searchF,updateF,sortF;
	Container mainMenu,addMenu,viewMenu,deleteMenu,searchMenu,updateMenu,sortMenu;
	JPanel titlepan,mainMenuSelectP,addMenuSelectP,addMenuViewP,viewMenuViewP,deleteMenuSelectP,deleteMenuViewP,searchMenuSelectP,searchMenuViewP,updateMenuSelectP,updateMenuViewP,delettitle1;
	JButton b1,b2,b3,b4,b5,addMBtn,addBackB,viewBackB,deleteMBtn,deleteBackB,searchb1,searchb2,searchBackB,searchNameBtn,searchQualityBtn,searchPrizeBtn,searchMBtn,updateMBtn,updateBackB,updateSelectTraceBtn;;
	JLabel title,addIDL,addNameL,addAgeL,addGenderL,addEyecolorL,addBgroupL,addIDnoL,addStatusL,viewtitle;
	JLabel deleteIDL,deleteStatusL;
	JLabel searchNameL,searchPrizeL,searchPrize2L,searchQualityL;
	JLabel updateIDL,updateNameL,updateAgeL,updateEyecolorL,updateGenderL,updateBgroupL,updateStatusL, deletetitle;
	
	JTextField addMTextFID,addMTextFName,addMTextFAge,addMTextFGender,addMTextFEyecolor,addMTextFBgroup;
	JTextField deleteMTextFID;
	JTextField searchMTextFName,searchMTextFsec,searchMTextFename,searchMTextFedes;
	JTextField updateMTextFID,updateMTextFName,updateMTextFAge,updateMTextFEyecolor;
	
	@SuppressWarnings("rawtypes")
	JComboBox mainMComboBox,searchMComboBox,searchMComboBEyecolor,addMComboBEyecolor,updateMComboBEyecolor    ,searchMComboBGender,addMComboBGender,updateMComboBGender,searchMComboBBgroup,addMComboBBgroup,updateMComboBBgroup;
	JTextArea mainMTextA,addMTextA,viewMTextA,deleteMTextA,updateMTextAForView,updateMTextAForResult,sortMTextAForResult,searchMTextAForResult;
	
	
	String ID, name, Age, Gender, Eyecolor, Bgroup;
	String IDView, nameView, AgeView, EyecolorView, GenderView, BgroupView,  IDnoView;
	String IDDelView, nameDelView, AgeDelView, EyecolorDelView, GenderDelView, BgroupDelView,  IDnoDelView;//EyeDel view
	String IDSort, nameSort, AgeSort, EyecolorSort, GenderSort, BgroupSort, IDnoSort;
	String IDDelete, nameDelete, AgeDelete, EyecolorDelete, GenderDelete, BgroupDelete, IDnoDelete;
	String nameSearchSel,nameSearchSe2, PrizeSearchSel, SorNSearchSel;
	String newNameUpdate, newGenderUpdate, splittUpdate, newAgeUpdate, newEyecolorUpdate, newBgroupUpdate, recordUpdate1, IDUpdate1,IDUpdate2nd,recordUpdate2,choice;
	
	String buffer;
	
	long pos_array[]=new long[1000];
	String primary_array[]=new String[1000];
	String secondary_array[]=new String[1000];
	long s_pos_array[]=new long[1000];
	JLabel delIDV,delNameV,delAgeV,delEyecolorV,delGenderV,delBgroupV;//delEyecolor
	String delValidationID,delValidationName,delValidationAge,delValidationEyecolor,delValidationGender,delValidationBgroup;//delValidationeyecolor
	
	EyeData()
	{
		  mainF=new JFrame("Main Menu");
		  addF=new JFrame("Add Menu");
		  viewF=new JFrame("View All Menu");
		  deleteF=new JFrame("Delete Menu");
		  searchF=new JFrame("Search Menu");
		  updateF=new JFrame("Update Menu");
		  sortF=new JFrame("Sort Menu");
		  
		//--Main Menu Container
		  
			  mainMenu=mainF.getContentPane();
			   mainMenu.setBackground(Color.black);
			   mainMenu.setVisible(true);
			   
			   addMenu=addF.getContentPane();
			   addMenu.setBackground(Color.white);
			   addMenu.setVisible(true);
			   
			   viewMenu=viewF.getContentPane();
			   viewMenu.setBackground(Color.black);
			   viewMenu.setVisible(true);
			   
			   titlepan=new JPanel();
			   titlepan.setBounds(150,50,1000,100);
			   titlepan.setBackground(Color.white);
			   
			   mainMenuSelectP=new JPanel();
			   mainMenuSelectP.setBounds(300,200,700,300);
			   mainMenuSelectP.setBackground(Color.black);
			   
			   addMenuSelectP=new JPanel();
			   addMenuSelectP.setBounds(500,100,340,340);
			   addMenuSelectP.setLayout(new BoxLayout(addMenuSelectP,BoxLayout.PAGE_AXIS));
			   addMenuSelectP.setBorder(new EmptyBorder(new Insets(50, 100,50, 100)));
			   
			   
			   
			   viewMenuViewP=new JPanel();
			   viewMenuViewP.setBounds(350,80,720,420);
			   viewMenuViewP.setBackground(Color.black);

			   //addMenuSelectP.setBorder(BorderFactory.createEmptyBorder(0,30,10,10));
			   addMenuSelectP.setBackground(Color.black);
			   
			   addMenuViewP=new JPanel();
			   addMenuViewP.setBounds(500,450,340,100);
			   addMenuViewP.setBackground(Color.black);
			   
			   deleteMenu=deleteF.getContentPane();
			   deleteMenu.setBackground(Color.white);
			   deleteMenu.setVisible(true);
			   
			   
			   
			   deleteMenuSelectP=new JPanel();
			   deleteMenuSelectP.setBounds(600,475,200,80);
			   deleteMenuSelectP.setBackground(Color.white);
			   
			   deleteMenuViewP=new JPanel();
			   deleteMenuViewP.setBounds(350,150,720,370);
			   deleteMenuViewP.setBackground(Color.white);
			   
			   searchMenu=searchF.getContentPane();
			   searchMenu.setBackground(Color.black);
			   searchMenu.setVisible(true);
			   
			   //--Search Menu Panel
			   searchMenuSelectP=new JPanel();
			   searchMenuSelectP.setBounds(100,100,400,400);
			   searchMenuSelectP.setBackground(Color.black);
			   
			   searchMenuViewP=new JPanel();
			   searchMenuViewP.setBounds(600,100,650,400);
			   searchMenuViewP.setBackground(Color.white);
			   
			 //--Update Menu Container
			   updateMenu=updateF.getContentPane();
			   updateMenu.setBackground(Color.lightGray);
			   updateMenu.setVisible(true);
			   
			   updateMenuSelectP=new JPanel();
			   updateMenuSelectP.setBounds(500,10,200,350);
			   updateMenuSelectP.setBackground(Color.green);
			   
			   updateMenuViewP=new JPanel();
			   updateMenuViewP.setBounds(750,10,200,200);
			   updateMenuViewP.setBackground(Color.green);

			   
		  
		  
		  {
			  
			   //add menu view
				   //--------------------------------------------------------------------------
				   //---
				   
				   addIDL=new JLabel("ID");
				   addIDL.setBounds(100,0,40,20);
				   
				   addMTextFID=new JTextField();
				   addMTextFID.setPreferredSize(new Dimension(60,20));
				   
				   //---
				   
				   addNameL=new JLabel("Name ");
				   addNameL.setPreferredSize(new Dimension(40,20));
				   
				   addMTextFName=new JTextField();
				   addMTextFName.setPreferredSize(new Dimension(110,20));
				   
				   //---
				   
				   addAgeL=new JLabel("Age ");
				   addAgeL.setPreferredSize(new Dimension(40,20));
				   
				   addMTextFAge=new JTextField();
				   addMTextFAge.setPreferredSize(new Dimension(110,20));
				   
				   //---
				   
				   addEyecolorL=new JLabel("Eyecolor ");//eyecolor
				   addEyecolorL.setPreferredSize(new Dimension(50,20));//eyecolor
				   
				String selectEyecolorAdd[]={"Select Eyecolor","Red","Brown","Black","Green","blue","gray"};
				   addMComboBEyecolor=new JComboBox(selectEyecolorAdd);
				   addMComboBEyecolor.setPreferredSize(new Dimension(110,20));
				   
				  
				   
				   //--
				   
				   addGenderL=new JLabel("Gender ");
				   addGenderL.setPreferredSize(new Dimension(50,20));
				   
				   String selectGenderAdd[]={"Select gender","Male","Female","others"};
				   addMComboBGender=new JComboBox(selectGenderAdd);
				   addMComboBGender.setPreferredSize(new Dimension(110,20));
				   
				   
				   //--
				   
				   addBgroupL=new JLabel("Bgroup ");
				   addBgroupL.setPreferredSize(new Dimension(50,20));
				   
				   String selectBgroupAdd[]={"Select Bgroup","A+","A-","B+","B-","AB+","AB-","O+","O-"};
				   addMComboBBgroup=new JComboBox(selectBgroupAdd);
				   addMComboBBgroup.setPreferredSize(new Dimension(110,20));
				   
				   addMBtn=new JButton("Save");
				   addMBtn.setPreferredSize(new Dimension(80,20));
				   
				   addBackB=new JButton("Back");
				   addBackB.setPreferredSize(new Dimension(80,20));
				   addMTextA=new JTextArea();
				   addMTextA.setPreferredSize(new Dimension(170,80));
				   addMTextA.setEditable(false);
		  }
		  
		  {//view menu view
			   //---
			   
			  viewtitle=new JLabel("       ALL RECORDS IN FILE");
			  viewtitle.setPreferredSize(new Dimension(300,30));
			  Font font = new Font("Times New Roman", Font.BOLD,20);
			  viewtitle.setFont(font);
			  
			   viewBackB=new JButton("Back");
			   viewBackB.setPreferredSize(new Dimension(80,20));
			   
			   viewMTextA=new JTextArea(20, 60);
			   viewMTextA.setPreferredSize(new Dimension(700,650));
			   viewMTextA.setEditable(false);
			   
			   //---
			   //----------------------------------------------------------------
			   JScrollPane scrollView = new JScrollPane(viewMTextA,
			   JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
			   //----------------------------------------------------------------
			   
			   viewMenuViewP.add(viewtitle,BorderLayout.CENTER);
			   viewMenuViewP.add(scrollView,BorderLayout.CENTER);
			   viewMenuViewP.add(viewBackB,BorderLayout.NORTH);
			 //  viewMenuViewP.add(viewMTextA,BorderLayout.SOUTH);
			   
			   
		  }
		  
		  {//delete menu view
			  deletetitle=new JLabel("       ALL RECORDS IN FILE");
			  deletetitle.setPreferredSize(new Dimension(300,30));
			  Font font = new Font("Times New Roman", Font.BOLD,20);
			  deletetitle.setFont(font);
			  
			   deleteIDL=new JLabel("ID: ");
			   deleteIDL.setForeground(Color.blue);
			   deleteIDL.setPreferredSize(new Dimension(20,20));
			   
			   deleteMTextFID=new JTextField();
			   deleteMTextFID.setPreferredSize(new Dimension(110,20));
			   
			   deleteMBtn=new JButton("Delete");
			   deleteMBtn.setPreferredSize(new Dimension(80,20));
			   
			   deleteStatusL=new JLabel("---Status of Delete---");
			   deleteStatusL.setPreferredSize(new Dimension(170,20));
			   
			   deleteBackB=new JButton("Back");
			   deleteBackB.setPreferredSize(new Dimension(80,20));
			   
			   deleteMTextA=new JTextArea(15, 60);
			   deleteMTextA.setPreferredSize(new Dimension(700,430));
			   deleteMTextA.setEditable(false);
			  
			  
			  JScrollPane scrollDelete = new JScrollPane(deleteMTextA,
			   JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
			  
			  //----------------------------------------------------------------
			   deleteMenuSelectP.add(deleteIDL,BorderLayout.NORTH);
			   deleteMenuSelectP.add(deleteMTextFID,BorderLayout.NORTH);
			   deleteMenuSelectP.add(deleteMBtn,BorderLayout.CENTER);
			   deleteMenuSelectP.add(deleteBackB,BorderLayout.CENTER);
			   deleteMenuSelectP.add(deleteStatusL,BorderLayout.SOUTH);
			   
			   deleteMenuViewP.add(deletetitle,BorderLayout.CENTER);
			   deleteMenuViewP.add(scrollDelete,BorderLayout.CENTER);
			  
			  }
		  
		  {//Update menu view
			   //----------------------------------------------------------------
			   //---
			   updateIDL=new JLabel("ID: ");
			   updateIDL.setPreferredSize(new Dimension(20,20));
			   
			   updateMTextFID=new JTextField();
			   updateMTextFID.setPreferredSize(new Dimension(110,20));
			   
			   //---
			   updateSelectTraceBtn=new JButton("Select");
			   updateSelectTraceBtn.setPreferredSize(new Dimension(80,20));
			   //---
			   updateMTextAForView=new JTextArea("Tracing the details\nID\nName\nAge\nEyecolor\nGender\nBgroup\nIDno");//eyecolor
			   updateMTextAForView.setPreferredSize(new Dimension(170,150));
			   updateMTextAForView.setEditable(false);
			   //---
			   
			   updateNameL=new JLabel("New Name: ");
			   updateNameL.setPreferredSize(new Dimension(70,20));
			   
			   updateMTextFName=new JTextField();
			   updateMTextFName.setPreferredSize(new Dimension(110,20));
			   
			   //---
			   
			   updateAgeL=new JLabel("Age:");
			   updateAgeL.setPreferredSize(new Dimension(70,20));
			   
			   updateMTextFAge=new JTextField();
			   updateMTextFAge.setPreferredSize(new Dimension(110,20));
			   
			   //---
			   
			   
			   updateEyecolorL=new JLabel("Eyecolor:");
			   updateEyecolorL.setPreferredSize(new Dimension(70,20));
			   
			  String selectEyecolorUpdate[]={"Select Eyecolor","Red","Brown","Black","Green","blue","gray"};
			   updateMComboBEyecolor=new JComboBox(selectEyecolorUpdate);
			   updateMComboBEyecolor.setPreferredSize(new Dimension(110,20));
			   
			  
			   
			   //---
			   updateGenderL=new JLabel("New Gender:");
			   updateGenderL.setPreferredSize(new Dimension(70,20));
			   
			   String selectGenderUpdate[]={"Select Gender","Male","Female","Others"};
			   updateMComboBGender=new JComboBox(selectGenderUpdate);
			   updateMComboBGender.setPreferredSize(new Dimension(110,20));
			   
			  //---
			   updateBgroupL=new JLabel("New Bgroup:");
			  updateBgroupL.setPreferredSize(new Dimension(70,20));
			   
			   String selectBgroupUpdate[]={"Select Bgroup","A+","A-","B+","B-","AB+","AB-","O+","O-"};
			   updateMComboBBgroup=new JComboBox(selectBgroupUpdate);
			   updateMComboBBgroup.setPreferredSize(new Dimension(110,20));
			  
			   
			   //---
			   updateMBtn=new JButton("Update");
			   updateMBtn.setPreferredSize(new Dimension(80,20));
			   
			   updateBackB=new JButton("Back");
			   updateBackB.setPreferredSize(new Dimension(80,20));
			   //--------------------------------------------------------------------------
			   
			   updateMTextAForResult=new JTextArea("Tracing the details result\nID\nName\nAge\nEyecolor\nGender\nBgroup\nIDno");
			   updateMTextAForResult.setPreferredSize(new Dimension(170,150));
			   updateMTextAForResult.setEditable(false);
			   
			   updateStatusL=new JLabel("Status of update");
			   updateStatusL.setPreferredSize(new Dimension(200,20));
			   
			   //---Val
			   
			   
			   delIDV=new JLabel("Enter the ID!!! If ID is of 1 Char then ignore !");
			   delIDV.setPreferredSize(new Dimension(300,15));
			   delIDV.setForeground(Color.BLACK);
			   delIDV.setVisible(false);
			   
			   delNameV=new JLabel("Enter the Name!!!");
			   delNameV.setPreferredSize(new Dimension(100,10));
			   delNameV.setForeground(Color.BLACK);
			   delNameV.setVisible(false);
			   
			   delAgeV=new JLabel("Enter the Age!!!");
			   delAgeV.setPreferredSize(new Dimension(100,10));
			   delAgeV.setForeground(Color.WHITE);
			   delAgeV.setVisible(false);
			   
			   delEyecolorV=new JLabel("Enter the Eyecolor!!!");//Eyecolor
			   delEyecolorV.setPreferredSize(new Dimension(100,10));
			   delEyecolorV.setForeground(Color.WHITE);
			   delEyecolorV.setVisible(false);
			   
			   delGenderV=new JLabel("Select Gender!!!");
			   delGenderV.setPreferredSize(new Dimension(150,20));
			   delGenderV.setForeground(Color.WHITE);
			   delGenderV.setVisible(false);
			   
			   delBgroupV=new JLabel("Select Bgroup!!!");
			   delBgroupV.setPreferredSize(new Dimension(150,20));
			   delBgroupV.setForeground(Color.WHITE);
			   delBgroupV.setVisible(false);
			   
			   //---Val
			   
			   //------------------------- Display ---------------------------------------
			   updateMenuSelectP.add(updateIDL,BorderLayout.NORTH);
			   updateMenuSelectP.add(updateMTextFID,BorderLayout.NORTH);
			   updateMenuSelectP.add(updateSelectTraceBtn,BorderLayout.NORTH);
			   updateMenuSelectP.add(updateMTextAForView,BorderLayout.NORTH);
			   //---------------------------
			   updateMenuSelectP.add(updateNameL,BorderLayout.CENTER);
			   updateMenuSelectP.add(updateMTextFName,BorderLayout.CENTER);
			   
			   updateMenuSelectP.add(updateAgeL,BorderLayout.CENTER);
			   updateMenuSelectP.add(updateMTextFAge,BorderLayout.CENTER);
			   
			   updateMenuSelectP.add(updateEyecolorL,BorderLayout.CENTER);
			   updateMenuSelectP.add(updateMComboBEyecolor,BorderLayout.CENTER);
			   
			   updateMenuSelectP.add(updateGenderL,BorderLayout.CENTER);
			   updateMenuSelectP.add(updateMComboBGender,BorderLayout.CENTER);
			   
			   updateMenuSelectP.add(updateBgroupL,BorderLayout.CENTER);
			   updateMenuSelectP.add(updateMComboBBgroup,BorderLayout.CENTER);
			   
			   
			   //---------------------------
			   updateMenuSelectP.add(updateMBtn,BorderLayout.SOUTH);
			   updateMenuSelectP.add(updateBackB,BorderLayout.SOUTH);
			   //----------------------------------------------------------------
			   updateMenuViewP.add(updateMTextAForResult,BorderLayout.NORTH);
			   updateMenuViewP.add(updateStatusL,BorderLayout.SOUTH);
			   //---Val
			   updateMenuSelectP.add(delIDV,BorderLayout.SOUTH);
			   updateMenuSelectP.add(delNameV,BorderLayout.SOUTH);
			   updateMenuSelectP.add(delAgeV,BorderLayout.SOUTH);
			   updateMenuSelectP.add(delEyecolorV,BorderLayout.SOUTH);//eyecolor
			   updateMenuSelectP.add(delGenderV,BorderLayout.SOUTH);
			   updateMenuSelectP.add(delBgroupV,BorderLayout.SOUTH);
			   //---Val
			   
			   
			   
			   //----------------------------------------------------------------
			  }
 {//Search menu view
			  
			  searchb1=new JButton("  SEARCH BY NAME            ");
			  searchb1.setPreferredSize(new Dimension(300,30));
			  Font font1 = new Font("TIMES NEW ROMAN",Font.BOLD, 14);
			  //searchb1.setSize(200,100);
			  searchb1.setFont(font1);
			  searchb1.setBackground(Color.YELLOW);   
			  searchMenuSelectP.add(searchb1,BorderLayout.NORTH);
			  
			  searchb2=new JButton("  SEARCH BY NAME & DESIGNATION    ");
			  searchb2.setPreferredSize(new Dimension(300,30));
			  Font font2 = new Font("TIMES NEW ROMAN",Font.BOLD, 14);
			  //searchb1.setSize(200,100);
			  searchb2.setFont(font2);
			  searchb2.setBackground(Color.YELLOW);   
			  searchMenuSelectP.add(searchb2,BorderLayout.NORTH);
			  
			  
			  searchNameL=new JLabel("Employee_Name: ");
			  searchNameL.setPreferredSize(new Dimension(105,40));
			   
			  searchMTextFName=new JTextField();
			  searchMTextFName.setPreferredSize(new Dimension(200,25));
			  
			  searchNameBtn=new JButton("select");
			  searchNameBtn.setPreferredSize(new Dimension(210,20));
			  //----------------------------------------------------------------
			  searchPrizeL=new JLabel("Employee_name & designation:");
			  searchPrizeL.setPreferredSize(new Dimension(190,40));
			   
			  searchMTextFename=new JTextField();
			  searchMTextFename.setPreferredSize(new Dimension(80,20));
			  
			  searchMTextFedes=new JTextField();
			  searchMTextFedes.setPreferredSize(new Dimension(80,20));
			  
			  searchPrizeBtn=new JButton("select");
			  searchPrizeBtn.setPreferredSize(new Dimension(210,20));
			  

			  searchBackB=new JButton("BACK");
			  searchBackB.setPreferredSize(new Dimension(300,30));
			  Font font3 = new Font("TIMES NEW ROMAN",Font.BOLD, 14);
			  //searchb1.setSize(200,100);
			  searchBackB.setFont(font3);
			  searchBackB.setBackground(Color.YELLOW);
			  //----------------------------------------------------------------
			
			  //----------------------------------------------------------------
			  
			   searchMTextAForResult=new JTextArea(15, 50);
			   searchMTextAForResult.setPreferredSize(new Dimension(100,100));
			   searchMTextAForResult.setEditable(false);
			   
			   //---
			   //----------------------------------------------------------------
			   JScrollPane scrollSearch = new JScrollPane(searchMTextAForResult,
			   JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
			  
			  //---------------------------------- Display ------------------------------
			  
			 
			  searchMenuSelectP.add(searchBackB,BorderLayout.SOUTH);
			  
			  searchMenuSelectP.add(searchNameL,BorderLayout.NORTH);
			  searchMenuSelectP.add(searchMTextFName,BorderLayout.NORTH);
			  searchMenuSelectP.add(searchNameBtn,BorderLayout.NORTH);
			  
			  searchMenuSelectP.add(searchPrizeL,BorderLayout.CENTER);
			  searchMenuSelectP.add(searchMTextFename,BorderLayout.CENTER);
			  searchMenuSelectP.add(searchMTextFedes,BorderLayout.CENTER);
			  searchMenuSelectP.add(searchPrizeBtn,BorderLayout.CENTER);
			  searchMenuViewP.add(scrollSearch,BorderLayout.CENTER);
			  searchNameL.setVisible(false);
	          searchMTextFName.setVisible(false);
	          searchNameBtn.setVisible(false);
	          
	          searchPrizeL.setVisible(false);
	          searchMTextFename.setVisible(false);
	          searchMTextFedes.setVisible(false);
	          searchPrizeBtn.setVisible(false);
			  //-------------
			  
		
			  
			  //searchMenuViewP.add(scrollSearch,BorderLayout.CENTER);

			  //----------------------------------------------------------------
			  
			  }
		  
		  
		  
		  {
			  title=new JLabel("    EYE  DONATION  MANAGEMENT    ");
			  title.setPreferredSize(new Dimension(800,100));
			  Font font = new Font("Times New Roman", Font.BOLD,40);
			  title.setFont(font);
		  }
		  
		  {//--setting all frames visiblity to true
			   
			  mainF.setVisible(true);
			
			  mainF.setLayout(null);
			  addF.setVisible(false);
			  addF.setLayout(null);
			  
			  viewF.setVisible(false);
			  viewF.setLayout(null);
			  
			  deleteF.setVisible(false);
			  deleteF.setLayout(null);

			  searchF.setVisible(false);
			  searchF.setLayout(null);
			  
			  updateF.setVisible(false);
			  updateF.setLayout(null);
			  
		  }
		  
		  {
			   mainMenu.add(titlepan,BorderLayout.CENTER);
			   mainMenu.add(mainMenuSelectP);
			   mainMenu.setSize(550,300);
			   mainF.setSize(1550,800);
			   mainMenu.setVisible(true);
			   
			   addMenu.add(addMenuSelectP);
			   addMenu.add(addMenuViewP);
			   addMenu.setSize(550,300);
			   addF.setSize(1550,800);
			   addMenu.setVisible(true);
			   
			   viewMenu.add(viewMenuViewP);
			   viewMenu.setSize(550,300);
			   viewF.setSize(1550,800);
			   viewMenu.setVisible(true);
			   
			   deleteMenu.add(deleteMenuSelectP);
			   deleteMenu.add(deleteMenuViewP);
			   deleteMenu.setSize(550,300);
			   deleteF.setSize(1550,800);
			   deleteMenu.setVisible(true);
			   
			   
			   searchMenu.add(searchMenuSelectP);
			   searchMenu.add(searchMenuViewP);
			   searchMenu.setSize(550,300);
			   searchF.setSize(1550,800);
			   searchMenu.setVisible(true);
			   
			   updateMenu.add(updateMenuSelectP);
			   updateMenu.add(updateMenuViewP);
			   updateMenu.setSize(550,450);
			   updateF.setSize(1550,800);
			   updateMenu.setVisible(true);
		  }
		  
		  
		  {
			  titlepan.add(title,BorderLayout.CENTER);
			  
			   b1=new JButton("Add Donor Data  "); 
			   b1.setPreferredSize(new Dimension(600,40));
		        Font font5 = new Font("TIMES NEW ROMAN",Font.BOLD, 18);
				// b1.setSize(300,300);
				  b1.setFont(font5);
				  b1.setBackground(Color.white); 
		        mainMenuSelectP.add(b1,BorderLayout.NORTH);
		        
		        b2=new JButton("View Donor Data "); 
		        b2.setPreferredSize(new Dimension(600,40));
		        Font font6 = new Font("TIMES NEW ROMAN",Font.BOLD, 18);
				// b1.setSize(300,300);
				  b2.setFont(font5);
				  b2.setBackground(Color.white); 
		       mainMenuSelectP.add(b2,BorderLayout.NORTH);
		        
		        b3=new JButton("Delete Donor Data "); 
		        b3.setPreferredSize(new Dimension(600,40));
		        Font font9 = new Font("TIMES NEW ROMAN",Font.BOLD, 18);
				// b1.setSize(300,300);
				  b3.setFont(font9);
				  b3.setBackground(Color.white); 
		       mainMenuSelectP.add(b3,BorderLayout.NORTH);
		        
		        
		        b4=new JButton("Search Donor Data "); 
		        b4.setPreferredSize(new Dimension(600,40));
		       			// b1.setSize(300,300);
				  b4.setFont(font5);
				  b4.setBackground(Color.white); 
		        mainMenuSelectP.add(b4,BorderLayout.NORTH);    
		        
		        b5=new JButton("Update Donor Data "); 
		        b5.setPreferredSize(new Dimension(600,40));
		       			// b1.setSize(300,300);
				  b5.setFont(font5);
				  b5.setBackground(Color.white); 
		        mainMenuSelectP.add(b5,BorderLayout.NORTH);
		        
		        
		        addMenuSelectP.add(addIDL,BorderLayout.NORTH);
		        addMenuSelectP.add(addMTextFID,BorderLayout.NORTH);
		        
		        addMenuSelectP.add(addNameL,BorderLayout.EAST);
		        addMenuSelectP.add(addMTextFName,BorderLayout.NORTH);
		        
		        addMenuSelectP.add(addAgeL,BorderLayout.NORTH);
		        addMenuSelectP.add(addMTextFAge,BorderLayout.NORTH);
		        
		        addMenuSelectP.add(addEyecolorL,BorderLayout.NORTH);
		        addMenuSelectP.add(addMComboBEyecolor,BorderLayout.NORTH);//Eyecolor
		        
		        addMenuSelectP.add(addGenderL,BorderLayout.NORTH);
		        addMenuSelectP.add(addMComboBGender,BorderLayout.NORTH);
		        
		        addMenuSelectP.add(addBgroupL,BorderLayout.NORTH);
		        addMenuSelectP.add(addMComboBBgroup,BorderLayout.NORTH);
		        
		        addMenuSelectP.add(addMBtn,BorderLayout.SOUTH);
		        addMenuSelectP.add(addBackB,BorderLayout.SOUTH);
		        
		        addMenuViewP.add(addMTextA,BorderLayout.NORTH);
		    //    addMenuViewP.add(addStatusL,BorderLayout.SOUTH);
		  }
		  
		 
		  //ActionListener for main menu
			  b1.addActionListener(new ActionListener(){
			    public void actionPerformed(ActionEvent ae){
			      mainF.setVisible(false);
			      addF.setVisible(true);
			      
			    }
			  });
		  
		  
		  //ActionListener for main menu
			  b2.addActionListener(new ActionListener(){
			    public void actionPerformed(ActionEvent ae){
			      mainF.setVisible(false);
			      addF.setVisible(false);
			      viewF.setVisible(true);
			      deleteStatusL.setText("");
			      try
			      {
			       //View details
			      
			       BufferedReader bR1 = new BufferedReader( new FileReader("Menu2.txt") ); 
			       String record;
			       
			       int i=0;
			       String DisplayView1[]=new String[1024];
			       while( ( record = bR1.readLine() ) != null )
			       {
			       StringTokenizer st = new StringTokenizer(record,",");
			       
			       IDView=st.nextToken().substring(1);
			       nameView=st.nextToken();
			       AgeView=st.nextToken();
			       EyecolorView=st.nextToken();//Eyecolor
			       GenderView=st.nextToken();
			       BgroupView=st.nextToken();                                                                     //eyecolor
			       DisplayView1[i]="ID = "+IDView+" *** Name = "+nameView+" *** Age = "+AgeView+" *** Eyecolor = "+EyecolorView+" *** Gender = "+GenderView+" *** Bgroup = "+BgroupView+"\n";
			       
			       viewMTextA.append(DisplayView1[i]);
			       i++;
			       }
			       bR1.close();
			      }
			      catch(Exception ex)
			      {
			       System.out.println("Exception msg: "+ex);
			      }
			    }
			  });
		  
			  
			 
			  
			  //ActionListener for main menu
				  b3.addActionListener(new ActionListener(){
				    public void actionPerformed(ActionEvent ae){
				      mainF.setVisible(false);
				      addF.setVisible(false);
				      viewF.setVisible(false);
				      deleteF.setVisible(true);
				      try
				      {
				       //View details Delete
				       
				       BufferedReader bR1DelView = new BufferedReader( new FileReader("Menu2.txt") ); 
				       String recordDelView;
				       
				       int iDel=0;
				       String DisplayDel1[]=new String[1024];
				       while( ( recordDelView = bR1DelView.readLine() ) != null )
				       {
				       StringTokenizer stDel = new StringTokenizer(recordDelView,",");
				       
				       IDDelView=stDel.nextToken().substring(1);
				       nameDelView=stDel.nextToken();
				       AgeDelView=stDel.nextToken();
				       EyecolorDelView=stDel.nextToken();//EyeDelView
				       GenderDelView=stDel.nextToken();
				       BgroupDelView=stDel.nextToken();
				       DisplayDel1[iDel]="ID = "+IDDelView+" *** Name = "+nameDelView+" *** Age = "+AgeDelView+" *** Eyecolor = "+EyecolorDelView+" *** Gender = "+GenderDelView+" *** Bgroup = "+BgroupDelView+"\n";
				       
				       deleteMTextA.append(DisplayDel1[iDel]);
				       iDel++;
				       }
				       bR1DelView.close();
				      }
				      catch(Exception ex)
				      {
				       System.out.println("Exception msg: "+ex);
				      }
				    }
				  });
			  
			  
			  //ActionListener for main menu
				  b4.addActionListener(new ActionListener(){
				    public void actionPerformed(ActionEvent ae){
				    	mainF.setVisible(false);
					      addF.setVisible(false);
					      viewF.setVisible(false);
					      deleteF.setVisible(false);
					      searchF.setVisible(true);
				    }
				  });
			  
			  
			  //ActionListener for Delete btn of menu
				    deleteMBtn.addActionListener(new ActionListener(){
				    public void actionPerformed(ActionEvent ae){
				    try
				    {
				     if(deleteMTextFID.getText().length()!=0)
				     {
				       deleteMTextA.setText("");
				      //------------ delete ----------
				      String ID2, record1,choice3;
				      
				      
				      File tempDB = new File("MenuList1.txt");
				      File db = new File("Menu2.txt");
				      
				      
				      BufferedReader br2 = new BufferedReader( new FileReader( db ) );
				      BufferedWriter bw2 = new BufferedWriter( new FileWriter( tempDB ) );
				      
				      
				      //---------- Delete Dish Record ----------
				      
				      ID2 ="."+deleteMTextFID.getText()+",";
				      System.out.println(ID2);
				      
				      while( ( record1 = br2.readLine() ) != null ) {
				       System.out.println("tttt");
				       
				       if( record1.contains(ID2) ){
				    	   System.out.println("yupp");
				    	   System.out.println(record1);
				    	   continue;
				       }
				        
				     
				       bw2.write(record1);          
				       bw2.flush();                
				       bw2.newLine();                    
				   
				      }
				      
				      br2.close();
				      bw2.close();
				      
				     boolean a= db.delete();
				     
				      System.out.println(a);
				      //tempDB.renameTo(db);
				    
				      
				      boolean success = tempDB.renameTo(db);      
				      String StatusDel="Status of Deleting donor data: "+success;
				      deleteStatusL.setForeground(Color.gray);
				      deleteStatusL.setText(StatusDel);
				      
				      
				      //-------------------------
				       //View details------------------------
				    
				       BufferedReader bR1 = new BufferedReader( new FileReader("Menu2.txt") ); 
				       String record2;
				       
				       int i=0;
				       String DisplayView1[]=new String[1024];
				       while( ( record2 = bR1.readLine() ) != null )
				       {
				        StringTokenizer st = new StringTokenizer(record2,",");
				        
				        IDDelete=st.nextToken().substring(1);
				        nameDelete=st.nextToken();
				        AgeDelete=st.nextToken();
				        EyecolorDelete=st.nextToken();//EyeDelete
				        GenderDelete=st.nextToken();
				        BgroupDelete=st.nextToken();															//Eyecolor
				        DisplayView1[i]="ID = "+IDDelete+" *** Name = "+nameDelete+" *** Age = "+AgeDelete+" *** Eyecolor = "+EyecolorDelete+" *** Gender = "+GenderDelete+" *** Bgroup = "+BgroupDelete+"\n";
				        
				        deleteMTextA.append(DisplayView1[i]);
				        i++;
				       }
				       bR1.close();
				       
				       deleteMTextFID.setText("");
				     }
				    }
				    catch(Exception ex)
				    {
				     System.out.println("Exception msg: "+ex);
				    }
				    }
				    
				   });
				  
			  
			  //ActionListener for Back of Update menu
				    updateBackB.addActionListener(new ActionListener(){
				    public void actionPerformed(ActionEvent ae){
				     updateF.setVisible(false);
				      updateMTextFID.setText("");
				      updateMTextFName.setText("");
				      updateMTextFAge.setText("");
				      updateMTextFEyecolor.setText("");//Eyecolor
				      updateMTextAForView.setText("");
				      updateMTextAForResult.setText("");
				      
				     mainF.setVisible(true);
				    }
				    
				   });
				  
			  
		  
			  //ActionListener for main menu
				  b5.addActionListener(new ActionListener(){
				    public void actionPerformed(ActionEvent ae){
				      mainF.setVisible(false);
				      addF.setVisible(false);
				      viewF.setVisible(false);
				      deleteF.setVisible(false);
				      searchF.setVisible(false);
				      updateF.setVisible(true);
				      
				    }
				  });
			  
			  
			  //ActionListener for main menu
					 
				    //-------------------------------- Update start --------------------------------
				      
				       updateMTextAForView.setText("");
				       updateMTextAForResult.setText("");
				       updateStatusL.setText("");
				       updateSelectTraceBtn.addActionListener(new ActionListener(){
				         public void actionPerformed(ActionEvent ae)
				         {
				          try
				          {
				         	 IDUpdate1 =updateMTextFID.getText();
				              File dbUpdate = new File("Menu2.txt");
				              File tempDBUpdate = new File("MenuList_temp.txt");
				              BufferedReader brUpdate = new BufferedReader( new FileReader(dbUpdate) );
				              BufferedWriter bwUpdate = new BufferedWriter( new FileWriter(tempDBUpdate) );
				             
				             
				             updateMTextAForView.setText("");
				             while( ( recordUpdate1 = brUpdate.readLine() ) != null )
				             {
				              String DisplayUpdate1;
				              
				              StringTokenizer stUpdate1 = new StringTokenizer(recordUpdate1,",");
				              String id=stUpdate1.nextToken().substring(1);
				              String name=stUpdate1.nextToken();
				              String Age=stUpdate1.nextToken();
				              String Eyecolor=stUpdate1.nextToken();//Eyecolor
				              String s=stUpdate1.nextToken();
				              String b=stUpdate1.nextToken();
				              if( id.equals(IDUpdate1) ) {
				            	  																				//Eyecolor
				               DisplayUpdate1="-- Current Record --\nID = "+id+"\nName = "+name+"\nAge = "+Age+"\nEyecolor = "+Eyecolor+"\nGender = "+s+"\nBgroup = "+b+"\n";
				              
				                updateMTextAForView.setText(DisplayUpdate1);
				                
				               
				              }
				             }       
				             brUpdate.close();
				             bwUpdate.close();
				             }
				             catch(Exception ex)
				             {
				              System.out.println("Exception msg: "+ex);
				             }
				            }
				           });
				               
				          
				         /****/  
				          
				           //value input
				              
				           
				           //-----------------------------
				           
				           
				            updateMBtn.addActionListener(new ActionListener(){
				            public void actionPerformed(ActionEvent ae)
				            {
				             
				             try
				             {
				              
				              if(updateMTextFAge.getText().length()!=0&&updateMTextFName.getText().length()!=0)
				              {
				              IDUpdate1 ="."+updateMTextFID.getText()+",";
				             
				              BufferedReader brUpdate = new BufferedReader( new FileReader("Menu2.txt") );
				              BufferedWriter bwUpdate2 = new BufferedWriter( new FileWriter("MenuList_temp.txt") );
				              //updateMTextFID.setText("");
				              updateMTextAForResult.setText("");
				              
				              IDUpdate2nd = IDUpdate1;
				              System.out.println(IDUpdate2nd);
				              newNameUpdate = updateMTextFName.getText();
				              newNameUpdate=newNameUpdate.toLowerCase();
				              
				              newAgeUpdate =  updateMTextFAge.getText();
				              newEyecolorUpdate =  updateMTextFEyecolor.getText();//updateMComboBEyecolor.getSelectedItem().toString()
				              newGenderUpdate= updateMComboBGender.getSelectedItem().toString();
				              newBgroupUpdate= updateMComboBBgroup.getSelectedItem().toString();
				                
				              splittUpdate=IDUpdate2nd;
				               
				          //   String IDnoUpdate=splittUpdate.substring(1, splittUpdate.length() -1);
				              
				              BufferedReader brUpdate2 = new BufferedReader( new FileReader("Menu2.txt") );
				              
				              while( (recordUpdate2 = brUpdate2.readLine()) != null )
				              {       
				               if(recordUpdate2.contains(IDUpdate2nd))
				               {
				            	   StringTokenizer stUpdate1 = new StringTokenizer(recordUpdate2,",");
						              String id=stUpdate1.nextToken().substring(1);
						              String name=stUpdate1.nextToken();
						              String Age=stUpdate1.nextToken();
						              String Eyecolor=stUpdate1.nextToken();//Eyecolor
						              String s=stUpdate1.nextToken();
						              String b=stUpdate1.nextToken();
						              if(newNameUpdate=="" || newNameUpdate==null)
						              {
						            	  newNameUpdate=name;
						              }
						              if(newAgeUpdate=="" ||newAgeUpdate==null)
						              {
						            	  newAgeUpdate=Age;
						              }
						              if(newEyecolorUpdate=="" ||newEyecolorUpdate==null)//Eyecolor
						              {
						            	  newEyecolorUpdate=Eyecolor;
						              }
						              if(newGenderUpdate==""||newGenderUpdate==null)
						              {
						            	  newGenderUpdate=s;
						              }
						              if(newBgroupUpdate==""||newBgroupUpdate==null)
						              {
						            	  newBgroupUpdate=b;
						              }
						              
						              															//Eyecolor
				                bwUpdate2.write(IDUpdate2nd+newNameUpdate+","+newAgeUpdate+","+newEyecolorUpdate+","+newGenderUpdate+","+newBgroupUpdate+"$");
				                
				               }
				               else
				               {
				                bwUpdate2.write(recordUpdate2); 
				               }  
				                    
				               bwUpdate2.flush();
				               bwUpdate2.newLine();
				              }
				              brUpdate.close();
				              bwUpdate2.close();
				              brUpdate2.close();  
				              
				              File dbUpdate2 = new File("Menu2.txt");
				               File tempDBUpdate2 = new File("MenuList_temp.txt");
				               
				               dbUpdate2.delete();
				               
				               boolean success =tempDBUpdate2.renameTo(dbUpdate2);
				               
				               
				               String SuccessUpdate="Record Updation status: "+success;
				               
				           if(success==true)
				           {
				            updateStatusL.setForeground(Color.blue);
				            updateStatusL.setText(SuccessUpdate);
				           }
				           else
				           {
				            updateStatusL.setForeground(Color.RED);
				            updateStatusL.setText(SuccessUpdate);
				           }																																//Eyecolor
				           String ViewUpdate="-- Updated Record --\nID = "+IDUpdate2nd.substring(1)+"\nName = "+newNameUpdate+"\nAge = "+newAgeUpdate+"\nEyecolor = "+newEyecolorUpdate+"\nGender= "+newGenderUpdate+"\nBgroup= "+newBgroupUpdate;
				           updateMTextAForResult.setText(ViewUpdate);
				           updateMTextFID.setText("");
				           updateMTextFName.setText("");
				           updateMTextFAge.setText("");
				           updateMTextFEyecolor.setText("");//Eyecolor
				           }
				          }
				          catch(Exception ex)
				          {
				           System.out.println("Exception msg: "+ex);
				          }
				         }
				        });
				             
				     //-----------------   
				      
				      //-------------------------------- Update end --------------------------------
				    
			  
			  
			  
			   //update Validation-----------------------
				  
				    updateMTextFID.addKeyListener(new KeyAdapter()
				    {
				     public void keyTyped(KeyEvent ke)
				     {
				      delValidationID=updateMTextFID.getText();
				      
				      if(delValidationID.equals(""))
				      {
				       delIDV.setVisible(true);
				      }
				      else if(delValidationID.length()>0)
				      {
				       delIDV.setVisible(false);
				      }
				     }
				    });
				    
				    updateMTextFName.addKeyListener(new KeyAdapter()
				    {
				     public void keyTyped(KeyEvent ke)
				     {
				      delValidationName=updateMTextFName.getText();
				      if(delValidationName.length()==0)
				      {
				       delNameV.setVisible(true);
				      }
				      else if(delValidationName.length()>0)
				      {
				       delNameV.setVisible(false);
				      }
				     }
				    });
				    
				    updateMTextFAge.addKeyListener(new KeyAdapter()
				    {
				     public void keyTyped(KeyEvent ke)
				     {
				      delValidationAge=updateMTextFAge.getText();
				      if(delValidationAge.length()==0)
				      {
				       delAgeV.setVisible(true);
				      }
				      else if(delValidationAge.length()>0)
				      {
				       delAgeV.setVisible(false);
				      }
				     }
				    });
				    
				  updateMComboBEyecolor.addItemListener(new ItemListener() //eyecolor -scroll down and copy the bloodgroup code
				    {
				     public void itemStateChanged(ItemEvent e)
				     {
				     delValidationEyecolor=updateMComboBEyecolor.getSelectedItem().toString();
				      String addQV1="Select Eyecolor";
				      String addQV2="Red";
				      String addQV3="Brown";
				      String addQV4="Black";
				      String addQV5="Blue";
				      String addQV6="Green";
				      String addQV7="Gray";

				      if(delValidationEyecolor.equals(addQV1))
				      {
				       delEyecolorV.setVisible(true);
				      }
				      else if((delValidationEyecolor.equals(addQV2))||(delValidationEyecolor.equals(addQV2))/*||(delValidationEyecolor.equals(addQV3))||(delValidationEyecolor.equals(addQV4))||(delValidationEyecolor.equals(addQV5))||(delValidationEyecolor.equals(addQV6))||(delValidationEyecolor.equals(addQV7))*/)
				      {
				      
				       delEyecolorV.setVisible(false);
				      }
				     }
				    });
				      
				    
				    updateMComboBGender.addItemListener(new ItemListener()
				    {
				     public void itemStateChanged(ItemEvent e)
				     {      
				      delValidationGender=updateMComboBGender.getSelectedItem().toString();
				      String addQV1="Select Gender";
				      String addQV2="Male";
				      String addQV3="Female";
				      if(delValidationGender.equals(addQV1))
				      {
				       delGenderV.setVisible(true);
				      }
				      else if((delValidationGender.equals(addQV2))||(delValidationGender.equals(addQV2)))
				      {
				       delGenderV.setVisible(false);
				      }
				     }          
				    });
				    
				    updateMComboBBgroup.addItemListener(new ItemListener()
				    {
				     public void itemStateChanged(ItemEvent e)
				     {      
				      delValidationBgroup=updateMComboBBgroup.getSelectedItem().toString();
				      String addQV1="Select Bgroup";
				      String addQV2="A+";
				      String addQV3="A-";
				      String addQV4="B+";
				      String addQV5="B-";
				      String addQV6="AB+";
				      String addQV7="AB-";
				      String addQV8="O+";
				      String addQV9="O-";
				      if(delValidationBgroup.equals(addQV1))
				      {
				       delBgroupV.setVisible(true);
				      }
				      else if((delValidationBgroup.equals(addQV2))||(delValidationBgroup.equals(addQV2))/*||(delValidationBgroup.equals(addQV3))||(delValidationBgroup.equals(addQV4))||(delValidationBgroup.equals(addQV5))||(delValidationBgroup.equals(addQV6))||(delValidationBgroup.equals(addQV7))||(delValidationBgroup.equals(addQV8))||(delValidationBgroup.equals(addQV9))*/)
				      {
				       delBgroupV.setVisible(false);
				      }
				     }          
				    });


				    
				    
		  
		 
		  
		  
		  
		 
		  
		//ActionListener for Back of add menu
		  
		    addBackB.addActionListener(new ActionListener(){
		    public void actionPerformed(ActionEvent ae){
		     addF.setVisible(false);
		     mainF.setVisible(true);
		     addMTextFID.setText("");
		     addMTextFName.setText("");
		     addMTextFAge.setText("");
		     addMTextFEyecolor.setText("");
		     addMTextA.setText("");
		     //addStatusL.setText("");
		    }
		    
		   });
		  
		  
		  //ActionListener for Back of view menu
		        viewBackB.addActionListener(new ActionListener(){
		        public void actionPerformed(ActionEvent ae){
		         viewF.setVisible(false);
		         mainF.setVisible(true);
		         viewMTextA.setText("");
		        }
		        
		       });
		   
		  
		  //ActionListener for Back of Delete menu
			    deleteBackB.addActionListener(new ActionListener(){
			    public void actionPerformed(ActionEvent ae){
			     deleteF.setVisible(false);
			     mainF.setVisible(true);
			     deleteMTextFID.setText("");
			     deleteStatusL.setText("");
			     deleteMTextA.setText("");
			    }
			    
			   });
			  
		  
		  //ActionListener for Back of Search menu
			    searchBackB.addActionListener(new ActionListener(){
			    public void actionPerformed(ActionEvent ae){
			     searchF.setVisible(false);
			     mainF.setVisible(true);
			     searchMTextFName.setText("");
			     searchMTextFename.setText("");
			     searchMTextFedes.setText("");
			     searchMTextAForResult.setText("");
			    }
			   });
			  
		  
		
		  
		 
		  
		  //Adding details
			   addMBtn.addActionListener(new ActionListener(){
			    public void actionPerformed(ActionEvent ae)
			    {
			     
			     try
			     {
			      String addQval="Select Gender";																						//Eyecolor
    		                 	if(addMTextFID.getText().length()!=0&&addMTextFName.getText().length()!=0&&addMTextFAge.getText().length()!=0&&(!(addMComboBEyecolor.getSelectedItem().toString().equals(addQval)))&&(!(addMComboBGender.getSelectedItem().toString().equals(addQval)))&&(!(addMComboBBgroup.getSelectedItem().toString().equals(addQval))))
			      {
			       BufferedWriter bW1=new BufferedWriter(new FileWriter("Menu2.txt",true));
			       ID = " "+addMTextFID.getText()+" ";
			       name = addMTextFName.getText();
			       Age = addMTextFAge.getText();
			       Eyecolor = addMComboBEyecolor.getSelectedItem().toString();//Eyecolor
			       Gender = addMComboBGender.getSelectedItem().toString();
			       Bgroup = addMComboBBgroup.getSelectedItem().toString();
			       name=name.toLowerCase();
			       
			       String splitt=ID;
			       
			       String IDno=splitt.substring(1, splitt.length() -1);//Eyecolor
			       bW1.write("."+IDno+","+name+","+Age+","+Eyecolor+","+Gender+","+Bgroup+"$");
			       bW1.flush();
			       bW1.newLine();
			       bW1.close();														//eyecolr
			       String DetailsAdd="ID1: "+ID+"\nName: "+name+"\nAge: "+Age+"\nEyecolor: "+Eyecolor+"\nGender: "+Gender+"\nBgroup: "+Bgroup;
			       addMTextA.setText(DetailsAdd);
			    
			       addStatusL.setForeground(Color.GREEN);
			       addStatusL.setText("Added Details Successfully");
			       addMTextFID.setText("");
			       addMTextFName.setText("");
			       addMTextFAge.setText("");
			     //addMTextFEyecolor.setText("");
			      }
			   
			     }
			     
			     catch(Exception ex)
			     {
			      System.out.println("Exception msg: "+ex);
			     }
			    }
			   });
				    }
		  
		  
	
	
	public static void main(String args[])
	{//Code Created By Youtube Channel LEGEND MORTAL Channel Link: http://goo.gl/1Q6uYh
	  new EyeData();
	}
}


