 program to delete a node in a given Binary search tree 

class Treenode(object):
    def __init__(self, x):
         self.val = x
         self.left = None
         self.right = None

def delete_node(root, key):
	if not root: 
		return root
	if root.val > key: 
		root.left = delete_node(root.left, key)
	elif root.val < key: 
		root.right= delete_node(root.right, key)
	else: 
		if not root.right:
			return root.left	
		if not root.left:
			return root.right
 
		temp_val = root.right
		while temp_val.left:
			temp_val = temp_val.left	
		root.val = mini 
		root.right = deletenode(root.right,root.val)
	return root

def preOrder(node): 
    if not node: 
        return      
    print(node.val)
    preOrder(node.left) 
    preOrder(node.right)   
    
root = Treenode(5)  
root.left = Treenode(3)  
root.right = Treenode(6) 
root.left.left = Treenode(2)  
root.left.right = Treenode(4) 
root.left.right.left = Treenode(7)  
print("Original node:")
print(preOrder(root))
result = delete_Node(root, 4)
print("After deleting specified node:")
print(preOrder(result))
