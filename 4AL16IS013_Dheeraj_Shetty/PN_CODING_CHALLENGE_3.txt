1)Write a C++ Program Create a linked list and Append the nodes using class and object.
#include <iostream>
using namespace std;
struct Node
{
   int data;
   struct Node *next;
};
void push(struct Node** head, int node_data)
{
   struct Node* newNode = new Node;
   newNode->data = node_data;
   newNode->next = (*head);
 (*head) = newNode;
}
 void insertAfter(struct Node* prev_node, int node_data)
{
  if (prev_node == NULL)
{
   cout<<"the given previous node is required,cannot be NULL"; return; } 
   struct Node* newNode =new Node; 
   newNode->data = node_data;
   newNode->next = prev_node->next;
    prev_node->next = newNode;
}
void append(struct Node** head, int node_data)
{
struct Node* newNode = new Node;
 
struct Node *last = *head;
newNode->data = node_data;
 
newNode->next = NULL;

if (*head == NULL)
{
*head = newNode;
return;
}
while (last->next != NULL)
last = last->next;
last->next = newNode;
return;
}
void displayList(struct Node *node)
{
   while (node != NULL)
   {
      cout<<node->data<<"-->";
      node = node->next;
   }
 
if(node== NULL)
cout<<"null"; 
} 

int main() 
{ 

struct Node* head = NULL; 
append(&head, 10); 
push(&head, 20); 
push(&head, 30); 
 append(&head, 40); // 
 insertAfter(head->next, 50);
 cout<<"Final linked list: "<<endl;
displayList(head);
 return 0;
}

2) Write a C++ Program to find the sum of series 1+x+x(pow)2+...+x(pow)n using constructor.
#include<iostream.h>
#include<conio.h>
#include<math.h>

void main()
{
clrscr();
long i,n,x,sum=1;

cout<<“1+x+x^2+……+x^n”;
cout<<“nnEnter the value of x and n:”;
cin>>x>>n;

for(i=1;i<=n;++i)
sum+=pow(x,i);
cout<<“nSum=”<<sum;
getch(); 
}

3) Write a c++ Program to find the area of square, triangle and rectangle using function overloading.
#include<iostream>
using namespace std;
int area(int);
int area(int,int);
float area(float);
float area(float,float);
int main()
{
	int s,l,b;
	float r,bs,ht;
	cout<<"Enter side of a square:";
	cin>>s;
	cout<<"Enter length and breadth of rectangle:";
	cin>>l>>b;
	cout<<"Enter radius of circle:";
	cin>>r;
	cout<<"Enter base and height of triangle:";
	cin>>bs>>ht;
	cout<<"Area of square is"<<area(s);
	cout<<"\nArea of rectangle is "<<area(l,b);
    cout<<"\nArea of circle is "<<area(r);
    cout<<"\nArea of triangle is "<<area(bs,ht);
}
int area(int s)
{
    return(s*s);
}
int area(int l,int b)
{
    return(l*b);
}
float area(float r)
{
    return(3.14*r*r);
}
float area(float bs,float ht)
{
   return((bs*ht)/2);
}

4) Write a C++ Program to Find All Roots of a Quadratic Equation
#include <iostream>
#include <cmath>
using namespace std;

int main() {

    float a, b, c, x1, x2, discriminant, realPart, imaginaryPart;
    cout << "Enter coefficients a, b and c: ";
    cin >> a >> b >> c;
    discriminant = b*b - 4*a*c;
    
    if (discriminant > 0) {
        x1 = (-b + sqrt(discriminant)) / (2*a);
        x2 = (-b - sqrt(discriminant)) / (2*a);
        cout << "Roots are real and different." << endl;
        cout << "x1 = " << x1 << endl;
        cout << "x2 = " << x2 << endl;
    }
    
    else if (discriminant == 0) {
        cout << "Roots are real and same." << endl;
        x1 = (-b + sqrt(discriminant)) / (2*a);
        cout << "x1 = x2 =" << x1 << endl;
    }

    else {
        realPart = -b/(2*a);
        imaginaryPart =sqrt(-discriminant)/(2*a);
        cout << "Roots are complex and different."  << endl;
        cout << "x1 = " << realPart << "+" << imaginaryPart << "i" << endl;
        cout << "x2 = " << realPart << "-" << imaginaryPart << "i" << endl;
    }

    return 0;
}
