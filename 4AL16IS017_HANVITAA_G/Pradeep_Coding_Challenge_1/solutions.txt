1]

import java.util.*; 
public class index { 
   
    public static int findIndex(int arr[], int t) 
    { 
  
        // if array is Null 
        if (arr == null) { 
            return -1; 
        } 
  
   
        int len = arr.length; 
        int i = 0; 
  
        while (i < len) { 
  

            if (arr[i] == t) { 
                return i; 
            } 
            else { 
                i = i + 1; 
            } 
        } 
        return -1; 
    } 
 
    public static void main(String[] args) 
    { 
        int[] my_array = { 5, 4, 6, 1, 3, 2, 7, 8, 9 }; 
  
      
        System.out.println("Index position of 5 is: "+ findIndex(my_array, 5)); 
  
       
        System.out.println("Index position of 7 is: "+ findIndex(my_array, 7)); 
    } 
} 


2]

import java.util.Arrays; 
public class Exercise12 {
  public static void main(String[] args) 
    {
        int[] my_array = {1, 2, 5, 5, 6, 6, 7, 2};
 
        for (int i = 0; i < my_array.length-1; i++)
        {
            for (int j = i+1; j < my_array.length; j++)
            {
                if ((my_array[i] == my_array[j]) && (i != j))
                {
                    System.out.println("Duplicate Element : "+my_array[j]);
                }
            }
        }
    }    
}

3]

import java.util.*;
public class Exercise17 {
   public static void main(String[] args)
    {
      Calendar cal = Calendar.getInstance();
      Date cdate = cal.getTime();
      cal.add(Calendar.YEAR, 1); 
      Date nyear = cal.getTime();
      cal.add(Calendar.YEAR, -2); 
      Date pyear = cal.getTime();
      System.out.println("\nCurrent Date : " + cdate);
      System.out.println("\nDate before 1 year : " + pyear);
      System.out.println("\nDate after 1 year  : " + nyear+"\n");  	
    }
}


4]



import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {
    public static int getarraysum(int[][] a,int ele_row_i,int ele_col_i)
      {
           int sum=0;
           int fst_row=ele_row_i+1;
           int fst_col=ele_col_i;
           int sec_row=ele_row_i+1;
           int sec_col=ele_col_i+2;
 
           for(int i=ele_row_i;i<ele_row_i+3;i++){
               for(int j=ele_col_i;j<ele_col_i+3;j++){
                      if(i==fst_row && j==fst_col || i==sec_row && j==sec_col){
                       continue;
                       }else{
                         sum=sum+(int)a[i][j]; 
                            }
               }
            }
            return sum;
    }
 
    public static void main(String[] args) {
         Scanner in = new Scanner(System.in);
         int arr[][] = new int[6][6];
         int flag_invalid_entry=0;
         int max_hour_sum=0;
         
         for(int i=0; i < 6; i++){
            for(int j=0; j < 6; j++){
                arr[i][j] = in.nextInt();
                if(arr[i][j]<-9 || arr[i][j]>9){
                   flag_invalid_entry=1;
                  }
               }
            }
 
         if(flag_invalid_entry==0){
           for(int i=0;i<=3;i++){
              for(int j=0;j<=3;j++){
                 int new_sum=getarraysum(arr,i,j);
                 if(max_hour_sum==0 && flag_invalid_entry==0){
                    max_hour_sum=max_hour_sum+new_sum;
                    flag_invalid_entry=1;
                   }else if(max_hour_sum<new_sum){
                         max_hour_sum=new_sum;
                   }

          //System.out.println(new_sum+":sum of hourglass,"+arr[i][j]+" i:"+ i +" j:" + j+"updated_sum:"+max_hour_sum);
            } 
         } 
        }

       System.out.println(""+max_hour_sum);
       }
}
