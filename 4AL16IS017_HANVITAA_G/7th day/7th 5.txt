
#include <bits/stdc++.h> 
using namespace std; 

int findLargestSubarray(vector<int>& arr,int N, int K) 
{ 

    sort(arr.begin(), arr.end()); 
  
    int value1 = arr[0], value2 = 0; 
    int index1, index2, i, MAX; 
    index1 = index2 = 0; 
    i = 0, MAX = 0; 
  

    while (index2 != N) { 
 
        value2 = value1 + (K + 1); 
  

        index2 = lower_bound(arr.begin(),arr.end(), value2)  - arr.begin(); 

        MAX = max(MAX, (index2 - index1)); 
  
        index1 
            = lower_bound( 
                  arr.begin(), 
                  arr.end(), arr[index1] + 1) 
              - arr.begin(); 
        value1 = arr[index1]; 
    } 

    return MAX; 
} 
 
int main() 
{ 
    int N, K; 
    N = 18; 
    K = 5; 
    vector<int> arr{ 1, 1, 1, 2, 2, 
                     2, 2, 2, 3, 
                     3, 3, 6, 6, 7, 
                     7, 7, 7, 7 }; 
    cout << findLargestSubarray(arr, N, K); 
    return 0; 
} 