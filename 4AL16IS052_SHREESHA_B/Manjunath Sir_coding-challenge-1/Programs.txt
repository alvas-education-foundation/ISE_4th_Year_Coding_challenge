1.
import java.util.*; 
  
class difference { 
    static void getSum(int n) 
    { 
        int sumOdd = 0, sumEven = 0, c = 1; 
  
        while (n != 0) { 
            if (c % 2 == 0) 
                sumEven += n % 10; 
            else
                sumOdd += n % 10; 
            n /= 10; 
            c++; 
        } 
  
        System.out.println(Difference= " +sumEven-sumOdd ); 
    } 
  
    public static void main(String args[]) 
    { 
        int n = 457892; 
        getSum(n); 
    } 
} 

2.

#include <stdbool.h> 
#include <stdio.h> 
#include <string.h>  
bool isKeyword(char* str) 
{ 
    if (!strcmp(str, "break") || !strcmp(str, "case")  
        || !strcmp(str, "continue") || !strcmp(str, "default")  
        ||!strcmp(str, "defer") || !strcmp(str, "else")  
        || !strcmp(str, "for") || !strcmp(str, "if")  
        || !strcmp(str, "func")  || !strcmp(str, "goto") 
        || !strcmp(str, "map") || !strcmp(str, "range") || !strcmp(str, "return")|| !strcmp(str, "struct")|| !strcmp(str, "type")|| !strcmp(str, "var") ) 
        return (true); 
    return (false); 
} 

int main() 
{ 
    isKeyword("while") ? printf("Is a keyword\n"): printf("Not a keyword\n"); 
    
    return 0; 
} 

3.

#include<stdio.h>
#define MAX 1000
void fibonacci(int n)
{
 int i, term1 = 0, term2 = 1, nextTerm;
 for (i = 1; i<=n; i++)
 {
  nextTerm = term1 + term2;
  term1 = term2;
  term2 = nextTerm;
 }
 printf("%d", term1);
}

void prime(int n)
{
 int i, j, flag, count =0;
 for (i=2; i<=MAX; i++)
 {
  flag = 0;
  for (j=2; j<i; j++)
  {
   if(i%j == 0)
   {
    flag = 1;
    break;
   }
  }
  if (flag == 0)
   count++;
  if(count == n)
  {
   printf("%d", i);
   break;
  }
 }
}
int main( )
{
 int n;
 scanf("%d", &n);
 if(n%2 == 1)
  fibonacci (n/2 + 1);
 else
  prime(n/2);
 return 0;
}